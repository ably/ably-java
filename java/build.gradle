plugins {
    id 'com.github.gmazzo.buildconfig' version '5.3.5'
    id 'checkstyle'
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

apply from: '../common.gradle'
apply from: 'maven.gradle'

sourceCompatibility = 1.8
targetCompatibility = 1.8

buildConfig {
    packageName 'io.ably.lib'
    className 'BuildConfig'
    useJavaOutput()
    buildConfigField 'String', 'LIBRARY_NAME', 'java'
}


dependencies {
    api project(':lib')
}

task testRealtimeSuite(type: Test) {
    filter {
        includeTestsMatching '*RealtimeSuite'
    }
    beforeTest { descriptor ->
        logger.lifecycle("-> $descriptor")
    }
    outputs.upToDateWhen { false }
    testLogging.exceptionFormat = 'full'
}

task testRestSuite(type: Test) {
    filter {
        includeTestsMatching '*RestSuite'
    }
    beforeTest { descriptor ->
        logger.lifecycle("-> $descriptor")
    }
    outputs.upToDateWhen { false }
    testLogging.exceptionFormat = 'full'
}

/*
Test task to run pure unit tests, where pure means that they only run
locally and do not need to communicate with Ably servers.
This is achieved by excluding everything in the io.ably.lib.test package,
as it only contains the REST and Realtime suites.
*/
task runUnitTests(type: Test) {
    filter {
        excludeTestsMatching 'io.ably.lib.test.*'
    }
    beforeTest { descriptor ->
        // informational, so we're not flying blind at runtime
        logger.lifecycle("-> $descriptor")
    }

    // force tests to run every time this task is invoked
    outputs.upToDateWhen { false }
}


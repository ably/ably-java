final String MAVEN_USER = findProperty('ossrhUsername')
final String MAVEN_PASSWORD = findProperty('ossrhPassword')

final boolean IS_PUBLISHING_TO_MAVEN_CENTRAL = findProperty('publishTarget') == 'MavenCentral'

if (IS_PUBLISHING_TO_MAVEN_CENTRAL && (MAVEN_USER == null || MAVEN_PASSWORD == null)) {
    throw new GradleException('Either ossrhUsername or ossrhPassword not specified when publishTarget is MavenCentral.')
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'ably-java'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Ably Java client library SDK'
                description = 'A Java Realtime and REST client library SDK for the Ably platform.'
                url = 'https://www.github.com/ably/ably-java'
                packaging = 'jar'
                inceptionYear = '2015'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://raw.github.com/ably/ably-java/main/LICENSE'
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'ably' // our company org in GitHub: https://github.com/ably
                        name = 'Ably' // UK based company: Ably Real-time Ltd
                        email = 'support@ably.com'
                        url = 'https://ably.com/'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/ably/ably-java.git'
                    developerConnection = 'scm:git:ssh://github.com/ably/ably-java.git'
                    url = 'https://github.com/ably/ably-java'
                    tag = 'v' + version
                }
                organization {
                    name = 'Ably' // UK based company: Ably Real-time Ltd
                    url = 'https://ably.com/'
                }
                issueManagement {
                    system = 'Github'
                    url = 'https://github.com/ably/ably-java/issues'
                }
            }
        }
    }
    repositories {
        maven {
            // change URLs to point to your repos, e.g. http://my.org/repo
            def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
            def remoteUrl = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            url = IS_PUBLISHING_TO_MAVEN_CENTRAL ? remoteUrl : layout.buildDirectory.dir("release/${version}")

            if (IS_PUBLISHING_TO_MAVEN_CENTRAL) {
                credentials {
                    username = MAVEN_USER
                    password = MAVEN_PASSWORD
                }
            }
        }
    }
}

signing {
    required { true }
    sign publishing.publications
}
